apiVersion: v1
kind: Service
metadata:
  name: cdcservice
  labels:
    app.kubernetes.io/name: cdcservice
    app.kubernetes.io/instance: cdcservice
    app.kubernetes.io/component: middleware
    app.kubernetes.io/version: 0.16.0.RELEASE
    app.kubernetes.io/part-of: t2-microservices
spec:
  ports:
    - name: "8099"
      port: 8099
      targetPort: 8080
  selector:
    app.kubernetes.io/instance: cdcservice
    app.kubernetes.io/part-of: t2-microservices
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cdcservice
  labels:
    app.kubernetes.io/name: cdcservice
    app.kubernetes.io/instance: cdcservice
    app.kubernetes.io/component: middleware
    app.kubernetes.io/version: 0.16.0.RELEASE
    app.kubernetes.io/part-of: t2-microservices
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: cdcservice
      app.kubernetes.io/part-of: t2-microservices
  template:
    metadata:
      annotations:
        instrumentation.opentelemetry.io/inject-java: "true"
      labels:
        app.kubernetes.io/name: cdcservice
        app.kubernetes.io/instance: cdcservice
        app.kubernetes.io/component: middleware
        app.kubernetes.io/version: 0.16.0.RELEASE
        app.kubernetes.io/part-of: t2-microservices
    spec:
      containers:
        - name: cdcservice
          image: eventuateio/eventuate-cdc-service:0.16.0.RELEASE
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: JAVA_OPTS
              value: -Xmx64m
            - name: EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS
              value: kafka:9092
            - name: EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING
              value: kafka-zookeeper:2181
            - name: EVENTUATE_CDC_PIPELINE_PIPELINE1_TYPE
              value: eventuate-tram
            - name: EVENTUATE_CDC_PIPELINE_PIPELINE1_READER
              value: reader1
            - name: EVENTUATE_CDC_PIPELINE_PIPELINE2_TYPE
              value: eventuate-tram
            - name: EVENTUATE_CDC_PIPELINE_PIPELINE2_READER
              value: reader2
            - name: EVENTUATE_CDC_READER_READER1_TYPE
              value: postgres-wal
            - name: EVENTUATE_CDC_READER_READER1_DATASOURCEURL
              value: jdbc:postgresql://postgres-orchestrator/eventuate
            - name: EVENTUATE_CDC_READER_READER1_DATASOURCEUSERNAME
              value: eventuate
            - name: EVENTUATE_CDC_READER_READER1_DATASOURCEPASSWORD
              value: eventuate
            - name: EVENTUATE_CDC_READER_READER1_DATASOURCEDRIVERCLASSNAME
              value: org.postgresql.Driver
            - name: EVENTUATE_CDC_READER_READER1_LEADERSHIPLOCKPATH
              value: /eventuate/cdc/leader/orchestrator
            - name: EVENTUATE_CDC_READER_READER1_OUTBOXID
              value: "1"
            - name: EVENTUATE_CDC_READER_READER2_TYPE
              value: postgres-wal
            - name: EVENTUATE_CDC_READER_READER2_DATASOURCEURL
              value: jdbc:postgresql://postgres-inventory/inventory
            - name: EVENTUATE_CDC_READER_READER2_DATASOURCEUSERNAME
              value: inventory
            - name: EVENTUATE_CDC_READER_READER2_DATASOURCEPASSWORD
              value: inventory
            - name: EVENTUATE_CDC_READER_READER2_DATASOURCEDRIVERCLASSNAME
              value: org.postgresql.Driver
            - name: EVENTUATE_CDC_READER_READER2_LEADERSHIPLOCKPATH
              value: /eventuate/cdc/leader/inventory_service
            - name: EVENTUATE_CDC_READER_READER2_OUTBOXID
              value: "2"
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 250m
              memory: 250Mi
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
      restartPolicy: Always
